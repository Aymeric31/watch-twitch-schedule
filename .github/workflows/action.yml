name: event-schedule-comparer

on:
  schedule:
    - cron: "0 18 * * 1" # runs at 18:00 each Monday

jobs:
  push-json:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: setup python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    - name: install python packages
      run: |
        python -m pip install --upgrade pip
        pip install -r requirement.txt
          
    - name: Set up Git
      run: |
        git config --local user.name "github-actions[bot]"
        git config --local user.email "github-actions[bot]@users.noreply.github.com"
 
    - name: Vérifier la présence de events.json
      env:
        TWITCH_CLIENT_ID: ${{ secrets.TWITCH_CLIENT_ID }}
        TWITCH_BROADCASTER_ID: ${{ secrets.TWITCH_BROADCASTER_ID }}
        TWITCH_ACCESS_TOKEN: ${{ secrets.TWITCH_ACCESS_TOKEN }}
      run: |
        if [ -f events.json ]; then
          echo "The file events.json already exists."
          python script.py
        else
          echo "The file events.json does not exist."
          # Execute the script to create the events.json file
          python init_json.py
          # Add the events.json file to the commit
          git add events.json
          # Commit with an appropriate message
          git commit -m "events.json added"
          # Push the changes to GitHub
          git push origin master
        fi

    - name: Compare JSON files
      env:
        TWITTER_CONSUMER_KEY: ${{ secrets.TWITTER_CONSUMER_KEY }}
        TWITTER_CONSUMER_SECRET: ${{ secrets.TWITTER_CONSUMER_SECRET }}
        TWITTER_ACCESS_TOKEN: ${{ secrets.TWITTER_ACCESS_TOKEN }}
        TWITTER_ACCESS_TOKEN_SECRET: ${{ secrets.TWITTER_ACCESS_TOKEN_SECRET }}
        TWITTER_BEARER_TOKEN: ${{ secrets.TWITTER_BEARER_TOKEN }}
        DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        TWITCH_USERNAME: ${{ secrets.TWITCH_USERNAME }}
      id: compare_json
      run: |
        if diff -q events.json events-new.json; then
          echo "The JSON files are identical."
          python sendnotifsame.py
        else
          echo "The schedule has been updated."
          # Replace the old events.json file with the new events-new.json file
          mv events-new.json events.json
          # Add the events.json file to the commit
          git add events.json
          # Commit with an appropriate message
          git commit -m "events.json updated"
          # Push the changes to GitHub
          git push origin master
          python sendnotifupdated.py
        fi
